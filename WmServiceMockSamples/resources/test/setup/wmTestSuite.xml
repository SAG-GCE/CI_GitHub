<?xml version="1.0" encoding="UTF-8"?>
<webMethodsTestSuite description="Sample tests for the WmServiceMockSamples implementation" name="Sample Tests">
    <webMethodsTestCase description="Duplicate Check Success with IData results" name="Duplicate Check Success With Results">
        <mock folder="wmServiceMockSamples.data.services" name="getPotentialDuplicates">
            <pipeline filename="resources/test/data/mockDupCheckOutputResults.xml"/>
        </mock>
        <service folder="wmServiceMockSamples.services" name="getDuplicateLoans">
            <input>
                <file filename="resources/test/data/dupCheckInput.xml"/>
            </input>
            <expected>
                <file filename="resources/test/data/dupCheckSuccessWithResults.xml"/>
            </expected>
        </service>
    </webMethodsTestCase>
    <webMethodsTestCase description="Duplicate Check Failure handled by the catch block" name="Duplicate Check Catch Block">
        <mock folder="wmServiceMockSamples.data.services" name="getPotentialDuplicates">
            <exception class="java.lang.IllegalArgumentException" message="Bad argument"/>
        </mock>
        <service folder="wmServiceMockSamples.services" name="getDuplicateLoans">
            <input>
                <file filename="resources/test/data/dupCheckInput.xml"/>
            </input>
            <expected>
                <exception class="java.lang.IllegalArgumentException" message="Bad argument"/>
            </expected>
        </service>
    </webMethodsTestCase>
    <webMethodsTestCase description="Duplicate Check Success with no results" name="Duplicate Check Success No Results">
        <mock folder="wmServiceMockSamples.data.services" name="getPotentialDuplicates">
            <pipeline filename="resources/test/data/mockDupCheckOutputNoResults.xml"/>
        </mock>
        <service folder="wmServiceMockSamples.services" name="getDuplicateLoans">
            <input>
                <file filename="resources/test/data/dupCheckInput.xml"/>
            </input>
            <expected>
                <file filename="resources/test/data/dupCheckSuccessNoResults.xml"/>
            </expected>
        </service>
    </webMethodsTestCase>
    <webMethodsTestCase description="Duplicate Check Success with IData results" name="Duplicate Check Success With Results [With XPath Fields]">
        <mock folder="wmServiceMockSamples.data.services" name="getPotentialDuplicates">
            <pipeline filename="resources/test/data/mockDupCheckOutputResults.xml"/>
        </mock>
        <service folder="wmServiceMockSamples.services" name="getDuplicateLoans">
            <input>
                <file filename="resources/test/data/dupCheckInput.xml"/>
            </input>
            <expected>
                <file filename="resources/test/data/dupCheckSuccessWithResults.xml"/>
                <field path="response/duplicateLoans[1]/loanNumber"/>
            </expected>
        </service>
    </webMethodsTestCase>
    <webMethodsTestCase description="Duplicate Check Success with IData results" name="Duplicate Check Success With Results [Only XPath Fields]">
        <mock folder="wmServiceMockSamples.data.services" name="getPotentialDuplicates">
            <pipeline filename="resources/test/data/mockDupCheckOutputResults.xml"/>
        </mock>
        <service folder="wmServiceMockSamples.services" name="getDuplicateLoans">
            <input>
                <file filename="resources/test/data/dupCheckInput.xml"/>
            </input>
            <expected>
                <file/>
                <field path="/response/duplicateLoans[1]/loanNumber" value="0000000001"/>
                <field path="/response/duplicateLoans[1]/relevanceStatus" value="Relevant"/>
                <field path="/response/duplicateLoans[1]/underwritingDecisionExpirationDate" value="2005-04-27"/>
                <field path="/response/duplicateLoans[loanNumber='0000000001']/relevanceStatus" value="/^Rel.*$/"/>
            </expected>
        </service>
    </webMethodsTestCase>
    <webMethodsTestCase description="Duplicate Check Success with XML results" name="Duplicate Check Success With XML Results">
        <mock folder="wmServiceMockSamples.data.services" name="getPotentialDuplicates">
            <pipeline filename="resources/test/data/mockDupCheckOutputResults.xml"/>
        </mock>
        <service folder="wmServiceMockSamples.services" name="getDuplicateLoansXML" requestMethod="post">
            <input>
                <file filename="resources\test\data\dupCheckSuccessWithXMLInput.xml"/>
            </input>
            <expected>
                <file filename="resources/test/data/dupCheckSuccessWithXMLOutput.xml"/>
                <field path="/duplicateCheckResponse/duplicateLoans[1]/loanNumber"/>
            </expected>
        </service>
    </webMethodsTestCase>
    <webMethodsTestCase description="Duplicate Check Success using MockDataFactory" name="Duplicate Check Success using MockDataFactory">
        <mock folder="wmServiceMockSamples.data.services" name="getPotentialDuplicates">
            <factory class="com.wm.ps.serviceMock.samples.SampleMockDataFactory" pushRequiredClasses="true"/>
        </mock>
        <service folder="wmServiceMockSamples.services" name="getDuplicateLoans">
            <input>
                <file filename="resources/test/data/dupCheckInput.xml"/>
            </input>
            <expected>
                <file filename="resources/test/data/dupCheckSuccessWithResults.xml"/>
                <field path="/response/duplicateLoans[1]/loanNumber"/>
            </expected>
        </service>
    </webMethodsTestCase>
</webMethodsTestSuite>
